/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * wordData
 * @export
 * @interface WordData
 */
export interface WordData {
    /**
     * createdData
     * @type {Date}
     * @memberof WordData
     */
    createdData: Date;
    /**
     * 
     * @type {string}
     * @memberof WordData
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof WordData
     */
    transcription?: string;
    /**
     * translate
     * @type {string}
     * @memberof WordData
     */
    translate: string;
    /**
     * word
     * @type {string}
     * @memberof WordData
     */
    word: string;
}

/**
 * Check if a given object implements the WordData interface.
 */
export function instanceOfWordData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "createdData" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "translate" in value;
    isInstance = isInstance && "word" in value;

    return isInstance;
}

export function WordDataFromJSON(json: any): WordData {
    return WordDataFromJSONTyped(json, false);
}

export function WordDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): WordData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdData': (new Date(json['createdData'])),
        'id': json['id'],
        'transcription': !exists(json, 'transcription') ? undefined : json['transcription'],
        'translate': json['translate'],
        'word': json['word'],
    };
}

export function WordDataToJSON(value?: WordData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createdData': (value.createdData.toISOString().substring(0,10)),
        'id': value.id,
        'transcription': value.transcription,
        'translate': value.translate,
        'word': value.word,
    };
}

